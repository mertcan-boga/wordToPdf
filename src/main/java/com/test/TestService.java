package com.test;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.apache.commons.codec.binary.Base64;
import org.apache.poi.xwpf.converter.pdf.PdfConverter;
import org.apache.poi.xwpf.converter.pdf.PdfOptions;
import org.apache.poi.xwpf.usermodel.XWPFDocument;

@Path("/testservice")
public class TestService {
	private OutputStream stream;

	@POST
	@Produces({ MediaType.TEXT_PLAIN })
	@Consumes(MediaType.MULTIPART_FORM_DATA)
	public byte[] getTestService(String value) {
		byte[] encoded;
		try { 
			String pdfPath = "./WordDocument.pdf";

			// String value=
			// "";
			byte[] decodedBytes = Base64.decodeBase64(value.getBytes());
			// stream = new FileOutputStream("C:\\Users\\Mert\\Desktop\\Test2.docx");
			// stream.write(decodedBytes);
			InputStream is = new ByteArrayInputStream(decodedBytes);
			// InputStream doc = new FileInputStream(new
			// File("C:\\Users\\Mert\\Desktop\\Test.docx"));

			XWPFDocument document = new XWPFDocument(is);
			PdfOptions options = PdfOptions.create();
			OutputStream out = new FileOutputStream(new File(pdfPath));
			PdfConverter cc = new PdfConverter();

			PdfConverter.getInstance().convert(document, out, options);
			byte[] inFileBytes = Files.readAllBytes(Paths.get(pdfPath));
			encoded = java.util.Base64.getEncoder().encode(inFileBytes);
			System.out.println("Done");
			return encoded;
		} catch (FileNotFoundException ex) {
			System.out.println(ex.getMessage());
		} catch (IOException ex) {
			System.out.println(ex.getMessage());
		}
		return null;
	}
}